// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var ReFetch = require("./ReFetch.bs.js");
var Repromise = require("@aantron/repromise/src/js/repromise.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

function jsonRpcRequestPayload(method_, params) {
  var payload = { };
  payload["jsonrpc"] = "2.0";
  payload["id"] = 1.0;
  payload["method"] = method_;
  payload["params"] = params;
  return payload;
}

var JsonRpcError = Caml_exceptions.create("JsonRpc.JsonRpcError");

function handleResponse(json) {
  var error = Json_decode.optional(Json_decode.at(/* :: */[
            "error",
            /* :: */[
              "message",
              /* [] */0
            ]
          ], Json_decode.string), json);
  if (error !== undefined) {
    return /* Error */Block.__(1, [error]);
  } else {
    return /* Ok */Block.__(0, [Json_decode.field("result", Json_decode.string, json)]);
  }
}

function jsonRpcRequest(method_, params) {
  return Repromise.Rejectable[/* map */5]((function (response) {
                if (response.tag) {
                  return /* Error */Block.__(1, [response[0]]);
                } else {
                  return handleResponse(response[0]);
                }
              }), ReFetch.fetchJson("https://mainnet.infura.io/bs-eth", jsonRpcRequestPayload(method_, params)));
}

exports.jsonRpcRequestPayload = jsonRpcRequestPayload;
exports.JsonRpcError = JsonRpcError;
exports.handleResponse = handleResponse;
exports.jsonRpcRequest = jsonRpcRequest;
/* ReFetch Not a pure module */
