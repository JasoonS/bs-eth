// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Block = require("bs-platform/lib/js/block.js");
var Formats = require("../src/Formats.bs.js");

describe("#encode", (function () {
        describe("Address", (function () {
                return Jest.test("address", (function () {
                              return Jest.Expect[/* toEqual */12]("0x01234", Jest.Expect[/* expect */0](Formats.encode(/* Address */Block.__(0, ["0x01234"]))));
                            }));
              }));
        describe("Quantity", (function () {
                Jest.test("small number", (function () {
                        return Jest.Expect[/* toEqual */12]("0x4d2", Jest.Expect[/* expect */0](Formats.encode(/* Quantity */Block.__(1, [1234]))));
                      }));
                return Jest.test("zero", (function () {
                              return Jest.Expect[/* toEqual */12]("0x0", Jest.Expect[/* expect */0](Formats.encode(/* Quantity */Block.__(1, [0]))));
                            }));
              }));
        describe("BlockTag", (function () {
                return Jest.test("latest", (function () {
                              return Jest.Expect[/* toEqual */12]("latest", Jest.Expect[/* expect */0](Formats.encode(/* BlockTag */Block.__(2, ["latest"]))));
                            }));
              }));
        return /* () */0;
      }));

describe("Decode", (function () {
        describe("quantity", (function () {
                return Jest.test("smallish number", (function () {
                              return Jest.Expect[/* toEqual */12](1234, Jest.Expect[/* expect */0](Formats.Decode[/* quantity */0]("0x4d2")));
                            }));
              }));
        return /* () */0;
      }));

/*  Not a pure module */
